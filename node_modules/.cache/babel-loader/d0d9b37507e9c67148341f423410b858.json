{"remainingRequest":"D:\\git-code\\vue_shop\\node_modules\\babel-loader\\lib\\index.js!D:\\git-code\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\git-code\\vue_shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\git-code\\vue_shop\\src\\components\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\git-code\\vue_shop\\src\\components\\Login.vue","mtime":1589724833896},{"path":"D:\\git-code\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589679208524},{"path":"D:\\git-code\\vue_shop\\node_modules\\babel-loader\\lib\\index.js","mtime":1589679265885},{"path":"D:\\git-code\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589679208524},{"path":"D:\\git-code\\vue_shop\\node_modules\\vue-loader\\lib\\index.js","mtime":1589679253368}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\git-code\\\\vue_shop\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      //这里是登录表单的数据绑定对象\n      loginFrom: {\n        username: \"\",\n        password: \"\"\n      },\n      loginFromRules: {\n        //   验证用户名是否合法\n        username: [{\n          required: true,\n          message: \"请输入账号\",\n          trigger: \"blur\"\n        }, {\n          min: 3,\n          max: 15,\n          message: \"长度在 3 到 15 个字符\",\n          trigger: \"blur\"\n        }],\n        // 验证密码是否合法\n        password: [{\n          required: true,\n          message: \"请输入密码\",\n          trigger: \"blur\"\n        }, {\n          min: 6,\n          max: 15,\n          message: \"长度在 6 到 15 个字符\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  methods: {\n    //   重置表单\n    resetLoginFrom: function resetLoginFrom() {\n      //   console.log(this.loginFrom)\n      this.$refs.loginFromRef.resetFields();\n    },\n    login: function login() {\n      var _this = this;\n\n      this.$refs.loginFromRef.validate(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee(valid) {\n          var _ref2, res;\n\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (!valid) {\n                    _context.next = 8;\n                    break;\n                  }\n\n                  _context.next = 3;\n                  return _this.$http.post(\"login\", _this.loginFrom);\n\n                case 3:\n                  _ref2 = _context.sent;\n                  res = _ref2.data;\n\n                  if (!(res.meta.status !== 200)) {\n                    _context.next = 7;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\", console.log(\"登录失败\"));\n\n                case 7:\n                  console.log(\"登录成功\");\n\n                case 8:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA;AACA,MAAA,SAAA,EAAA;AACA,QAAA,QAAA,EAAA,EADA;AAEA,QAAA,QAAA,EAAA;AAFA,OAFA;AAMA,MAAA,cAAA,EAAA;AACA;AACA,QAAA,QAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,OAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,EAEA;AAAA,UAAA,GAAA,EAAA,CAAA;AAAA,UAAA,GAAA,EAAA,EAAA;AAAA,UAAA,OAAA,EAAA,gBAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAFA,CAFA;AAMA;AACA,QAAA,QAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,OAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,EAEA;AAAA,UAAA,GAAA,EAAA,CAAA;AAAA,UAAA,GAAA,EAAA,EAAA;AAAA,UAAA,OAAA,EAAA,gBAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAFA;AAPA;AANA,KAAA;AAmBA,GArBA;AAsBA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,cAFA,4BAEA;AACA;AACA,WAAA,KAAA,CAAA,YAAA,CAAA,WAAA;AACA,KALA;AAMA,IAAA,KANA,mBAMA;AAAA;;AACA,WAAA,KAAA,CAAA,YAAA,CAAA,QAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAA,iBAAA,KAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KADA;AAAA;AAAA;AAAA;;AAAA;AAAA,yBAGA,KAAA,CAAA,KAAA,CAAA,IAAA,CAAA,OAAA,EAAA,KAAA,CAAA,SAAA,CAHA;;AAAA;AAAA;AAGA,kBAAA,GAHA,SAGA,IAHA;;AAAA,wBAIA,GAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GAJA;AAAA;AAAA;AAAA;;AAAA,mDAIA,OAAA,CAAA,GAAA,CAAA,MAAA,CAJA;;AAAA;AAKA,kBAAA,OAAA,CAAA,GAAA,CAAA,MAAA;;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAA;;AAAA;AAAA;AAAA;AAAA;AAQA;AAfA;AAtBA,CAAA","sourcesContent":["<template>\r\n  <div class=\"login_container\">\r\n    <div class=\"login_box\">\r\n      <!-- 头像区域 -->\r\n      <div class=\"avater_box\">\r\n        <img src=\"../assets/logo.png\" alt />\r\n      </div>\r\n      <!-- 登录表单区域 -->\r\n      <el-form ref=\"loginFromRef\" :model=\"loginFrom\" :rules=\"loginFromRules\" label-width=\"0px\" class=\"login_form\">\r\n        <!-- 用户名 -->\r\n        <el-form-item prop=\"username\">\r\n          <el-input prefix-icon=\"el-icon-user-solid\" v-model=\"loginFrom.username\"></el-input>\r\n        </el-form-item>\r\n        <!-- 密码 -->\r\n        <el-form-item prop=\"password\">\r\n          <el-input type=\"password\" prefix-icon=\"el-icon-s-goods\" v-model=\"loginFrom.password\"></el-input>\r\n        </el-form-item>\r\n        <!-- 按钮区域 -->\r\n        <el-form-item class=\"btns\">\r\n          <el-button type=\"primary\" @click=\"login\">登录</el-button>\r\n          <el-button type=\"info\" @click=\"resetLoginFrom\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      //这里是登录表单的数据绑定对象\r\n      loginFrom: {\r\n        username: \"\",\r\n        password: \"\"\r\n      },\r\n      loginFromRules: {\r\n        //   验证用户名是否合法\r\n        username: [\r\n          { required: true, message: \"请输入账号\", trigger: \"blur\" },\r\n          { min: 3, max: 15, message: \"长度在 3 到 15 个字符\", trigger: \"blur\" }\r\n        ],\r\n        // 验证密码是否合法\r\n        password: [\r\n          { required: true, message: \"请输入密码\", trigger: \"blur\" },\r\n          { min: 6, max: 15, message: \"长度在 6 到 15 个字符\", trigger: \"blur\" }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  methods:{\r\n    //   重置表单\r\n      resetLoginFrom(){\r\n        //   console.log(this.loginFrom)\r\n        this.$refs.loginFromRef.resetFields();\r\n      },\r\n      login(){\r\n         this.$refs.loginFromRef.validate(async valid => {\r\n             if(valid){\r\n                // promise   返回类型  用await修饰成think方法\r\n               const { data: res } = await this.$http.post(\"login\", this.loginFrom)\r\n               if(res.meta.status !== 200)return console.log(\"登录失败\")\r\n               console.log(\"登录成功\")\r\n             }\r\n         }) \r\n      }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.login_container {\r\n  height: 100%;\r\n  background: #2b4b6b;\r\n}\r\n.login_box {\r\n  width: 450px;\r\n  height: 300px;\r\n  background: #ffffff;\r\n  border-radius: 3px;\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n}\r\n.avater_box {\r\n  height: 130px;\r\n  width: 130px;\r\n  border: 1px solid #eeeeee;\r\n  border-radius: 50%;\r\n  padding: 10px;\r\n  box-shadow: 0 0 10px #dddddd;\r\n  position: absolute;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: #ffffff;\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 50%;\r\n    background: #eeeeee;\r\n  }\r\n}\r\n.btns {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n.login_form {\r\n  width: 100%;\r\n  position: absolute;\r\n  bottom: 0;\r\n  padding: 0 20px;\r\n  box-sizing: border-box;\r\n}\r\n</style>"],"sourceRoot":"src/components"}]}